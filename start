#!/bin/bash
trap "echo -ne '\nstopping container...' && docker stop graphql-gateway > /dev/null 2>&1 && echo -ne '\t\t [done]\n'" EXIT

source check_config_service

HOST_IP=$(docker network inspect bridge --format='{{json .IPAM.Config}}' | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | tail -1)

echo -ne 'stopping old container...'
docker stop graphql-gateway > /dev/null 2>&1
echo -ne '\t [done]\n'

echo -ne 'downloading exec-envs...'
docker pull registry.dev.onetask.ai/code-kern-ai/lf-execution-environment:dev > /dev/null 2>&1
docker pull registry.dev.onetask.ai/code-kern-ai/ml-execution-environment:main > /dev/null 2>&1
docker pull registry.dev.onetask.ai/code-kern-ai/record-ide:dev > /dev/null 2>&1
echo -ne '\t [done]\n'

echo -ne 'building container...'
docker build -t graphql-dev -f dev.Dockerfile . > /dev/null 2>&1
echo -ne '\t\t [done]\n'

echo -ne 'migrating db...\n'
docker run --rm \
--name graphql-gateway-migration \
-e POSTGRES=postgresql://postgres:onetask@graphql-postgres:5432 \
--mount type=bind,source="$(pwd)"/,target=/app \
--network dev-setup_default \
--entrypoint /usr/local/bin/alembic \
graphql-dev upgrade head
echo -ne 'migration done\n'

echo -ne 'starting...'
docker run -d --rm \
--name graphql-gateway \
-p 7051:80 \
-e LF_EXEC_ENV_IMAGE=registry.dev.onetask.ai/code-kern-ai/lf-execution-environment:dev \
-e ML_EXEC_ENV_IMAGE=registry.dev.onetask.ai/code-kern-ai/ml-execution-environment:main \
-e RECORD_IDE_IMAGE=registry.dev.onetask.ai/code-kern-ai/record-ide:dev \
-e LF_NETWORK=dev-setup_default \
-e S3_ENDPOINT="http://$HOST_IP:7053" \
-e S3_ENDPOINT_LOCAL=object-storage:9000 \
-e S3_ACCESS_KEY=onetask \
-e S3_SECRET_KEY=r6ywtR33!DMlaL*SUUdy \
-e WS_NOTIFY_ENDPOINT="http://ws-notify:8080" \
-e POSTGRES=postgresql://postgres:onetask@graphql-postgres:5432 \
-e NEURAL_SEARCH=http://neural-search:80 \
-e WEAK_CLASSIFIER=http://weak-classification:80 \
-e WEAK_SUPERVISION=http://weak-supervision:80 \
-e EMBEDDING_SERVICE=http://embedding-service:80 \
-e ZERO_SHOT=http://zero-shot:80 \
-e TOKENIZER=http://tokenizer:80 \
-e DOC_OCK=http://doc-ock:80 \
-e KRATOS_ADMIN_URL=http://kratos:4434 \
--mount type=bind,source="$(pwd)"/,target=/app \
-v /var/run/docker.sock:/var/run/docker.sock \
--network dev-setup_default \
graphql-dev > /dev/null 2>&1
echo -ne '\t\t\t [done]\n'

docker logs -f graphql-gateway \
