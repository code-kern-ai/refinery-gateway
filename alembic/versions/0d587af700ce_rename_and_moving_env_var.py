"""Rename and moving env var

Revision ID: 0d587af700ce
Revises: 706d5611a73e
Create Date: 2024-06-27 14:48:45.251675

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0d587af700ce"
down_revision = "706d5611a73e"
branch_labels = None
depends_on = None


def upgrade():

    connection = op.get_bind()

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "markdown_dataset",
        sa.Column("llm_config", sa.JSON(), nullable=True),
        schema="cognition",
    )

    update_dataset_sql = """
        UPDATE cognition.markdown_dataset
        SET llm_config = jsonb_build_object(
            'llmIdentifier', 'OPEN_AI',
            'model', 'gpt-4-1106-preview',
            'envVarId', environment_variable_id::text
        )
    """
    connection.execute(update_dataset_sql)

    op.drop_index(
        "ix_cognition_markdown_dataset_environment_variable_id",
        table_name="markdown_dataset",
        schema="cognition",
    )
    op.drop_constraint(
        "markdown_dataset_environment_variable_id_fkey",
        "markdown_dataset",
        schema="cognition",
        type_="foreignkey",
    )
    op.drop_column("markdown_dataset", "environment_variable_id", schema="cognition")

    op.add_column(
        "project", sa.Column("llm_config", sa.JSON(), nullable=True), schema="cognition"
    )

    update_project_sql = """
        UPDATE cognition.project
        SET llm_config = jsonb_build_object(
            'llmIdentifier', 'OPEN_AI',
            'model', 'gpt-4-1106-preview',
            'envVarId', open_ai_env_var_id::text
        )
        WHERE open_ai_env_var_id IS NOT NULL
    """
    connection.execute(update_project_sql)

    op.drop_index(
        "ix_cognition_project_open_ai_env_var_id",
        table_name="project",
        schema="cognition",
    )
    op.drop_constraint(
        "project_open_ai_env_var_id_fkey",
        "project",
        schema="cognition",
        type_="foreignkey",
    )
    op.drop_column("project", "open_ai_env_var_id", schema="cognition")
    # ### end Alembic commands ###


def downgrade():

    connection = op.get_bind()

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "project",
        sa.Column(
            "open_ai_env_var_id", postgresql.UUID(), autoincrement=False, nullable=True
        ),
        schema="cognition",
    )

    reverse_update_project_sql = """
        UPDATE cognition.project
        SET open_ai_env_var_id = (llm_config->>'envVarId')::uuid
        WHERE llm_config IS NOT NULL
        AND llm_config->>'envVarId' IS NOT NULL;
    """
    connection.execute(reverse_update_project_sql)

    op.create_foreign_key(
        "project_open_ai_env_var_id_fkey",
        "project",
        "environment_variable",
        ["open_ai_env_var_id"],
        ["id"],
        source_schema="cognition",
        referent_schema="cognition",
        ondelete="SET NULL",
    )
    op.create_index(
        "ix_cognition_project_open_ai_env_var_id",
        "project",
        ["open_ai_env_var_id"],
        unique=False,
        schema="cognition",
    )
    op.drop_column("project", "llm_config", schema="cognition")
    op.add_column(
        "markdown_dataset",
        sa.Column(
            "environment_variable_id",
            postgresql.UUID(),
            autoincrement=False,
            nullable=True,
        ),
        schema="cognition",
    )

    reverse_update_dataset_sql = """
        UPDATE cognition.markdown_dataset
        SET environment_variable_id = (llm_config->>'envVarId')::uuid
        WHERE llm_config IS NOT NULL
    """
    connection.execute(reverse_update_dataset_sql)
    op.create_foreign_key(
        "markdown_dataset_environment_variable_id_fkey",
        "markdown_dataset",
        "environment_variable",
        ["environment_variable_id"],
        ["id"],
        source_schema="cognition",
        referent_schema="cognition",
        ondelete="SET NULL",
    )

    op.create_index(
        "ix_cognition_markdown_dataset_environment_variable_id",
        "markdown_dataset",
        ["environment_variable_id"],
        unique=False,
        schema="cognition",
    )
    op.drop_column("markdown_dataset", "llm_config", schema="cognition")
    # ### end Alembic commands ###
