"""adds embedders and payload

Revision ID: ba20f0a5a965
Revises: 992352f4c1f9
Create Date: 2022-09-08 07:19:29.068682

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ba20f0a5a965"
down_revision = "992352f4c1f9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "embedder",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("source_code", sa.String(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_embedder_created_by"),
        "embedder",
        ["created_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_embedder_project_id"),
        "embedder",
        ["project_id"],
        unique=False,
    )

    op.create_table(
        "embedder_payload",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("embedder_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("state", sa.String(), nullable=True),
        sa.Column("progress", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.Column("iteration", sa.Integer(), nullable=True),
        sa.Column("source_code", sa.String(), nullable=True),
        sa.Column("input_data", sa.JSON(), nullable=True),
        sa.Column("output_data", sa.JSON(), nullable=True),
        sa.Column("logs", sa.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["embedder_id"], ["embedder.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_embedder_payload_created_by"),
        "embedder_payload",
        ["created_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_embedder_payload_project_id"),
        "embedder_payload",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_embedder_embedder_id"),
        "embedder_payload",
        ["embedder_id"],
        unique=False,
    )


def downgrade():
    op.drop_index(
        op.f("ix_embedder_embedder_id"),
        table_name="embedder_payload",
    )
    op.drop_index(
        op.f("ix_embedder_payload_project_id"),
        table_name="embedder_payload",
    )
    op.drop_index(
        op.f("ix_embedder_payload_created_by"),
        table_name="embedder_payload",
    )
    op.drop_table("embedder_payload")
    op.drop_index(op.f("ix_embedder_project_id"), table_name="embedder")
    op.drop_index(op.f("ix_embedder_created_by"), table_name="embedder")
    op.drop_table("embedder")
