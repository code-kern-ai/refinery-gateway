"""Remove refinery token table

Revision ID: 414c990688f3
Revises: 3e59ce51739c
Create Date: 2024-09-09 09:25:36.796509

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '414c990688f3'
down_revision = '3e59ce51739c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    ## TODO: remove migration to dummy table logic before merge to dev
    connection = op.get_bind()
    connection.execute("DROP TABLE IF EXISTS migration_pat_dummy")
    connection.execute("SELECT * INTO migration_pat_dummy FROM personal_access_token")

    # generated code
    op.drop_index('ix_personal_access_token_project_id', table_name='personal_access_token')
    op.drop_index('ix_personal_access_token_user_id', table_name='personal_access_token')
    op.drop_table('personal_access_token')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('personal_access_token',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('project_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_used', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='personal_access_token_project_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='personal_access_token_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='personal_access_token_pkey')
    )
    op.create_index('ix_personal_access_token_user_id', 'personal_access_token', ['user_id'], unique=False)
    op.create_index('ix_personal_access_token_project_id', 'personal_access_token', ['project_id'], unique=False)

    ## TODO: remove migration to dummy table logic before merge to dev
    connection = op.get_bind()
    connection.execute("INSERT INTO personal_access_token SELECT * FROM migration_pat_dummy")
    connection.execute("DROP TABLE IF EXISTS migration_pat_dummy")


    # ### end Alembic commands ###
