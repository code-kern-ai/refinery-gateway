"""adds cognition project table

Revision ID: c1fbc725946a
Revises: 53c561be097d
Create Date: 2023-09-05 14:41:55.406012

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c1fbc725946a'
down_revision = '53c561be097d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("create schema cognition")
    op.create_table('project',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('refinery_references_project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('refinery_query_project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('refinery_relevance_project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['refinery_query_project_id'], ['project.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['refinery_references_project_id'], ['project.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['refinery_relevance_project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='cognition'
    )
    op.create_index(op.f('ix_cognition_project_created_by'), 'project', ['created_by'], unique=False, schema='cognition')
    op.create_index(op.f('ix_cognition_project_organization_id'), 'project', ['organization_id'], unique=False, schema='cognition')
    op.create_index(op.f('ix_cognition_project_refinery_query_project_id'), 'project', ['refinery_query_project_id'], unique=False, schema='cognition')
    op.create_index(op.f('ix_cognition_project_refinery_references_project_id'), 'project', ['refinery_references_project_id'], unique=False, schema='cognition')
    op.create_index(op.f('ix_cognition_project_refinery_relevance_project_id'), 'project', ['refinery_relevance_project_id'], unique=False, schema='cognition')

    op.create_table(
        "conversation",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["project_id"], ["cognition.project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema='cognition'
    )
    op.create_index(
        op.f("ix_conversation_created_by"), "conversation", ["created_by"], unique=False, schema='cognition'
    )
    op.create_index(
        op.f("ix_conversation_project_id"), "conversation", ["project_id"], unique=False, schema='cognition'
    )

    op.create_table(
        "message",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("conversation_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column("facts", sa.ARRAY(sa.JSON), nullable=True),
        sa.ForeignKeyConstraint(
            ["conversation_id"], ["cognition.conversation.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["project_id"], ["cognition.project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema='cognition'
    )
    op.create_index(
        op.f("ix_message_conversation_id"), "message", ["conversation_id"], unique=False, schema='cognition'
    )
    op.create_index(
        op.f("ix_message_created_by"), "message", ["created_by"], unique=False, schema='cognition'
    )
    op.create_index(
        op.f("ix_message_project_id"), "message", ["project_id"], unique=False, schema='cognition'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_message_project_id"), table_name="message", schema='cognition')
    op.drop_index(op.f("ix_message_created_by"), table_name="message", schema='cognition')
    op.drop_index(op.f("ix_message_conversation_id"), table_name="message", schema='cognition')
    op.drop_table("message")

    op.drop_index(op.f("ix_conversation_project_id"), table_name="conversation", schema='cognition')
    op.drop_index(op.f("ix_conversation_created_by"), table_name="conversation", schema='cognition')
    op.drop_table("conversation")

    op.drop_index(op.f('ix_cognition_project_refinery_relevance_project_id'), table_name='project', schema='cognition')
    op.drop_index(op.f('ix_cognition_project_refinery_references_project_id'), table_name='project', schema='cognition')
    op.drop_index(op.f('ix_cognition_project_refinery_query_project_id'), table_name='project', schema='cognition')
    op.drop_index(op.f('ix_cognition_project_organization_id'), table_name='project', schema='cognition')
    op.drop_index(op.f('ix_cognition_project_created_by'), table_name='project', schema='cognition')
    op.drop_table('project', schema='cognition')
    op.execute("drop schema cognition")
    # ### end Alembic commands ###
