"""adds cognition project table

Revision ID: c1fbc725946a
Revises: 53c561be097d
Create Date: 2023-09-05 14:41:55.406012

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c1fbc725946a"
down_revision = "53c561be097d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("create schema cognition")
    op.create_table(
        "project",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("organization_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "refinery_references_project_id",
            postgresql.UUID(as_uuid=True),
            nullable=True,
        ),
        sa.Column(
            "refinery_query_project_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.Column(
            "refinery_relevance_project_id",
            postgresql.UUID(as_uuid=True),
            nullable=True,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("color", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("operator_routing_source_code", sa.String(), nullable=True),
        sa.Column("wizard_running", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organization.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["refinery_query_project_id"], ["project.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["refinery_references_project_id"], ["project.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["refinery_relevance_project_id"], ["project.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_cognition_project_created_by"),
        "project",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_cognition_project_organization_id"),
        "project",
        ["organization_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_cognition_project_refinery_query_project_id"),
        "project",
        ["refinery_query_project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_cognition_project_refinery_references_project_id"),
        "project",
        ["refinery_references_project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_cognition_project_refinery_relevance_project_id"),
        "project",
        ["refinery_relevance_project_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "conversation",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_conversation_created_by"),
        "conversation",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_conversation_project_id"),
        "conversation",
        ["project_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "message",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("conversation_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("strategy_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column("facts", sa.ARRAY(sa.JSON), nullable=True),
        sa.ForeignKeyConstraint(
            ["conversation_id"], ["cognition.conversation.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_message_conversation_id"),
        "message",
        ["conversation_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_message_created_by"),
        "message",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_message_project_id"),
        "message",
        ["project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_message_strategy_id"),
        "message",
        ["strategy_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "strategy",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_strategy_created_by"),
        "strategy",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_strategy_project_id"),
        "strategy",
        ["project_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "strategy_step",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("strategy_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("strategy_step_type", sa.String(), nullable=True),
        sa.Column("strategy_step_position", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"], ["cognition.strategy.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_strategy_step_created_by"),
        "strategy_step",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_strategy_step_project_id"),
        "strategy_step",
        ["project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_strategy_step_strategy_id"),
        "strategy_step",
        ["strategy_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "retriever",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("strategy_step_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("source_code", sa.String(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["strategy_step_id"], ["cognition.strategy_step.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_retriever_created_by"),
        "retriever",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_retriever_project_id"),
        "retriever",
        ["project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_retriever_strategy_step_id"),
        "retriever",
        ["strategy_step_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "environment_variable",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("is_secret", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_environment_variable_created_by"),
        "environment_variable",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_environment_variable_project_id"),
        "environment_variable",
        ["project_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "personal_access_token",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("scope", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.Column("last_used", sa.DateTime(), nullable=True),
        sa.Column("token", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["project_id"], ["cognition.project.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_personal_access_token_project_id"),
        "personal_access_token",
        ["project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_personal_access_token_user_id"),
        "personal_access_token",
        ["user_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "pipeline_logs",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("message_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("pipeline_step_type", sa.String(), nullable=True),
        sa.Column("strategy_step_type", sa.String(), nullable=True),
        sa.Column("strategy_step_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_by", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("has_error", sa.Boolean(), nullable=True),
        sa.Column("record_dict_diff_previous", sa.JSON(), nullable=True),
        sa.Column("content", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("time_elapsed", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["message_id"], ["cognition.message.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["project_id"], ["cognition.project.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["strategy_step_id"], ["cognition.strategy_step.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_pipeline_logs_created_by"),
        "pipeline_logs",
        ["created_by"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_pipeline_logs_message_id"),
        "pipeline_logs",
        ["message_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_pipeline_logs_project_id"),
        "pipeline_logs",
        ["project_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_pipeline_logs_strategy_step_id"),
        "pipeline_logs",
        ["strategy_step_id"],
        unique=False,
        schema="cognition",
    )

    op.create_table(
        "markdown_file",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("organization_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("file_name", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column("category_origin", sa.String(), nullable=True),
        sa.Column("error", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organization.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cognition",
    )
    op.create_index(
        op.f("ix_markdown_file_user_id"),
        "markdown_file",
        ["user_id"],
        unique=False,
        schema="cognition",
    )
    op.create_index(
        op.f("ix_markdown_file_organization_id"),
        "markdown_file",
        ["organization_id"],
        unique=False,
        schema="cognition",
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_index(
        op.f("ix_markdown_file_organization_id"),
        table_name="markdown_file",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_markdown_file_user_id"),
        table_name="markdown_file",
        schema="cognition",
    )
    op.drop_table("markdown_file", schema="cognition")

    op.drop_index(
        op.f("ix_pipeline_logs_strategy_step_id"),
        table_name="pipeline_logs",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_pipeline_logs_project_id"),
        table_name="pipeline_logs",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_pipeline_logs_message_id"),
        table_name="pipeline_logs",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_pipeline_logs_created_by"),
        table_name="pipeline_logs",
        schema="cognition",
    )
    op.drop_table("pipeline_logs", schema="cognition")

    op.drop_index(
        op.f("ix_personal_access_token_user_id"),
        table_name="personal_access_token",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_personal_access_token_project_id"),
        table_name="personal_access_token",
        schema="cognition",
    )

    op.drop_index(
        op.f("ix_environment_variable_project_id"),
        table_name="environment_variable",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_environment_variable_created_by"),
        table_name="environment_variable",
        schema="cognition",
    )
    op.drop_table("environment_variable", schema="cognition")

    op.drop_index(
        op.f("ix_retriever_strategy_step_id"),
        table_name="retriever",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_retriever_project_id"), table_name="retriever", schema="cognition"
    )
    op.drop_index(
        op.f("ix_retriever_created_by"), table_name="retriever", schema="cognition"
    )
    op.drop_table("retriever", schema="cognition")

    op.drop_index(
        op.f("ix_strategy_step_strategy_id"),
        table_name="strategy_step",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_strategy_step_project_id"),
        table_name="strategy_step",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_strategy_step_created_by"),
        table_name="strategy_step",
        schema="cognition",
    )
    op.drop_table("strategy_step", schema="cognition")

    op.drop_index(
        op.f("ix_strategy_project_id"), table_name="strategy", schema="cognition"
    )
    op.drop_index(
        op.f("ix_strategy_created_by"), table_name="strategy", schema="cognition"
    )
    op.drop_table("strategy")

    op.drop_index(
        op.f("ix_message_project_id"), table_name="message", schema="cognition"
    )
    op.drop_index(
        op.f("ix_message_created_by"), table_name="message", schema="cognition"
    )
    op.drop_index(
        op.f("ix_message_conversation_id"), table_name="message", schema="cognition"
    )
    op.drop_index(
        op.f("ix_message_strategy_id"), table_name="message", schema="cognition"
    )
    op.drop_table("message")

    op.drop_index(
        op.f("ix_conversation_project_id"),
        table_name="conversation",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_conversation_created_by"),
        table_name="conversation",
        schema="cognition",
    )
    op.drop_table("conversation")

    op.drop_index(
        op.f("ix_cognition_project_refinery_relevance_project_id"),
        table_name="project",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_cognition_project_refinery_references_project_id"),
        table_name="project",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_cognition_project_refinery_query_project_id"),
        table_name="project",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_cognition_project_organization_id"),
        table_name="project",
        schema="cognition",
    )
    op.drop_index(
        op.f("ix_cognition_project_created_by"),
        table_name="project",
        schema="cognition",
    )
    op.drop_table("project", schema="cognition")
    op.execute("drop schema cognition")
    # ### end Alembic commands ###
